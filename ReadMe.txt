DialEdit3a.zip - A visual dialog editor for TurboVision (TM) dialogs

Copyright James M. Clark 2004	v1.3a   7-15-04

Send your comments, questions, and suggestions to: 
JamesMClark5@comcast.net

Web site: JamesMClark5.home.comcast.net
(Navigate to the Pascal page.)

The latest news (4/29/2014)

The source code is now released under the GNU General Public License 
verson 3 as given at https://www.gnu.org/copyleft/gpl.html.

The latest news (7/28/2004)

Those of you who downloaded and tried the DialEdit.zip file 
(version 1.1) were probably disappointed.  That DialEdit.exe
was an attempt to adapt a BP7.0 program to Visual Pascal
that didn't work.  While working on the adaptation, we released
an older BP7.0 compilation (version 1.2) that was tested on 
Windows 98 SE, Windows ME, Windows 95, and Windows NT.

With version 1.3, we got a Visual Pascal compilation that tested well, 
but the documentation was a little out-of date.  While working on 
the documentation update, we included Notes (end of this file) 
explaining the undocumented features and other things. 

This version 1.3a, includes the updated user manual, DialEdit.pdf. 

Contents of the zip file DialEdit3b.zip

	DialEdit.exe	the dialog editor, a win32 application
	DialEdit.ico	an icon for the dialog editor
	DialEdit.pdf	user manual, in Portable Document Format
	DialEdit_Screenshot.gif	sample screenshot
	Dialogs.hst	sample history file
	Dialogs.res	sample resource file
        Config.exe      optional tool for configuring DialEdit
	NewDlgs.pas	sample output file (generated dialogs)
 	TVInput.pas	a Pascal unit with dialog support
	    (mostly InputLine descendants with standard Validators) 
	TVUtil.pas	a Pascal unit with more dialog utilities
	    (mostly InputLine descendants for various data types) 
	ReadMe.txt	this file
added:
	DialEdit.pas	DialEdit program source code
	Params.pas	Params unit source code
	Config.pas	program for configuring programs using Params
	DialEdit.doc	user manual, for reading in the IDE
	DialTest.pas	program for testing dialog features

Versions

The version number v1.3 refers to this zip file.  The version of
the DialEdit program is indicated by the date shown when you click
on 'Dialog Editor' in the menu bar.

Setup

Copy all files to a directory of your choice.  The DIALOGS.* files,
NewDlgs.pas, and DialEdit_Screenshot files are only for examples or 
demonstration.  Delete these or move to a different directory to 
start your own History (HST) and Resource (RES) files.
Create a shortcut pointing to your copy of DialEdit.exe, and
referencing the icon file.  Pascal code generated by DialEdit will
usually need support from the TVInput.pas unit, and the TVUtil.pas
unit can be used for additional support.  You might prefer to move
the *.pas files to a different directory.

Read the user manual, available in two formats.  DialEdit.pdf 
can be viewed with the free Adobe Acrobat (TM) PDF reader.  
DialEdit.txt can be viewed with most Pascal IDE's.  It was 
originally meant to be viewed with the original form of the 
Microsoft LineDraw (DOS) font, but the TrueType (TM) MSLineDraw 
font is a close approximation.

Quick overview

The dialog editor can be used to visually design TurboVision (TM)
dialogs.  The generated Pascal code can optionally include a
LineDraw picture of the dialog for easy reference, and usually
needs to be supported by the TVInput unit.  Validators for most
data types are supported.  For each dialog, an interface record
type is defined, and default or initial record data can also be
defined.  DialEdit can be installed as a tool in the Borland IDE.

Sample screenshot

The DialEdit_Screenshot picture shows the dialog editor in action.
The "Specify an Adder Tree" dialog is from an actual program.  It
can be fetched from the DIALOGS.RES resource file using Dialog | 
Fetch from the menu bar.  Double-clicking on the dialog background
changed the background to a grid pattern for easy measuring and 
alignment.  Any element of the dialog can be moved or resized by 
dragging.  Double-clicking on the "Input Pattern" RadioButtons 
has opened the "Change RadioButtons" dialog.  In this dialog, the 
"Multiplier" item has been selected and the "Edit" button clicked, 
opening the "Change Item" dialog.  Along the bottom edge of the 
window are handy buttons for adding new items.

The source code for the "Specify an Adder Tree" dialog shown in 
the screenshot is included in the example file ATDlg6.pas, which 
was almost entirely generated by the DialEdit program.  The 
ATDlg6 unit uses the TVInput and TVUtil units included here.
These can be compiled with the Virtual Pascal compiler.

A quick test / exercise

With the DIALOGS.RES resource file in the current directory,
execute these commands:

Menu: File: Select files.. (get 'File Options' dialog).
Enter 'test.pas' as the 'Code Output Name', and click Ok.
Menu: File: Output options.. (get 'Output Options' dialog).
Check 'Pictures' and 'TV Code' under 'Output includes..'
Select 'Unit' under 'Code Format'.
Click 'Pick..' (get 'Select Dialogs' dialog).
Put a checkmark in front of all listed dialogs, using
the space bar and arrow keys, then click Ok.
Click 'Exit' at lower left.

Inspect the 'test.pas' file, and try compiling it; it is
a Pascal unit for the selected dialog(s).  

Legal stuff

You may use this program and code, but not take credit for it.
I make no promises regarding its use; use at your own risk.
I do not restrict the code that you generate using this tool.

The source code for DialEdit.exe is not published because it
uses modifications of Borland's code for dialog objects.

Notes - undocumented features

The dialogs to create and edit RadioButtons, CheckBoxes, and
MultiCheckBoxes now provide two listboxes to define the sub-
component items.  'Item Text' (was called 'Item Names') lists
the text that labels the selectable items.  'Value Name' lists
names for use in the generated Pascal code for the selection 
values.  (See the AdderTreeDialog example in the provided
NewDlgs.pas and Dialogs.res files.)

Notes - generating Pascal code and dialog pictures

DialEdit supports two styles of generating Pascal code and 
dialog pictures.  The two styles don't mix well -- you should
use either one or the other.

One style is to generate dialog code or pictures one at a time;
these are appended to the selected output file.  From the menu
bar, the Dialog | Gen Code and Dialog | Picture commands support
this style.  The output file will be closed when you exit DialEdit.
The contents of the output file will probably not be in the 
proper sequence or complete, and will need editing to produce a
compilable Pascal file.

The other style generates all the Pascal code needed for one or
more dialogs in one ready-to-compile Pascal unit file.  First,
you must save all of the dialogs that you need for your program,
using the Dialog } Save command.  If you have defined default 
data for the dialogs, and want these to be in the generated code,
check the 'Gen. Defaults' option for each dialog.  Then --

Use the File | Select Files command, if needed, to define the
output file.

Use the File | Output Options command to set the output options,
checking the Save checkbox if you want to save these options as
defaults.  Then click the 'Pick.." button.  In the next dialog,
use the space bar and arrow keys to put a check mark on the
saved dialogs for which you want to generate code, then click Ok.
This opens, [re]writes, and closes the output file.  If you selected 
'Unit' as the Code Format, the output file will be a complete 
Pascal unit file for the selected dialogs.  You will only need to 
edit this file if you want extra features not supported by DialEdit.

Notes - a minor bug

If you have a trial dialog open and you click 'Exit' on the status
bar, DialEdit does not exit.  This attempt also prevents closing
the trial dialog, but the Esc key will close the dialog and the
program.  Instead, close the trial dialog before you click 'Exit'.
